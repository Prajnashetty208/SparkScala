<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>Java_2022</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Java_2022 Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <payara.adminPort>4848</payara.adminPort>
    <payara.username>admin</payara.username>
    <payara.password></payara.password>
    <payara.hostname>localhost</payara.hostname>
    <payara.domainName>domain1</payara.domainName>
    <payara.home></payara.home>
    <payara.domainDir>${payara.home}/glassfish/domains</payara.domainDir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>Java_2022</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.7.16</version>
          <executions>
            <execution>
              <id>start-payara</id>
              <goals>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>deploy</id>
              <goals>
                <goal>redeploy</goal>
              </goals>
            </execution>
            <execution>
              <id>undeploy</id>
              <goals>
                <goal>undeploy</goal>
              </goals>
            </execution>
            <execution>
              <id>stop-payara</id>
              <goals>
                <goal>stop</goal>
              </goals>

            </execution>
          </executions>
          <dependencies>
            <!-- provides JSR88 client API to deploy on Payara -->
            <dependency>
              <groupId>org.glassfish.main.deployment</groupId>
              <artifactId>deployment-client</artifactId>
              <version>5.0</version>
            </dependency>
            <!-- provides a dependency of the JSR88 client API which is missing in Java 11+ -->
            <dependency>
              <groupId>jakarta.xml.bind</groupId>
              <artifactId>jakarta.xml.bind-api</artifactId>
              <version>2.3.3</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <configuration>
            <container>
              <containerId>payara</containerId>
              <type>installed</type>
              <home>${payara.home}</home>
            </container>
            <configuration>
              <type>existing</type>
              <home>${payara.domainDir}</home>
              <properties>
                <cargo.glassfish.domain.name>${payara.domainName}</cargo.glassfish.domain.name>
              </properties>
            </configuration>
          </configuration>
          <!-- provides JSR88 client API to deploy on Payara -->
          <dependencies>
            <dependency>
              <groupId>org.glassfish.main.deployment</groupId>
              <artifactId>deployment-client</artifactId>
              <version>5.0</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>payara-local</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <executions>
              <execution>
                <id>start-payara</id>
                <phase>pre-integration-test</phase>
              </execution>
              <execution>
                <id>deploy</id>
                <phase>pre-integration-test</phase>
              </execution>
              <execution>
                <id>undeploy</id>
                <phase>post-integration-test</phase>
              </execution>
              <execution>
                <id>stop-payara</id>
                <phase>post-integration-test</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven3-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <home>${payara.home}</home>
                </container>
                <configuration>
                  <type>existing</type>
                  <home>${payara.domainDir}</home>
                  <properties>
                    <cargo.glassfish.domain.name>${payara.domainName}</cargo.glassfish.domain.name>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
